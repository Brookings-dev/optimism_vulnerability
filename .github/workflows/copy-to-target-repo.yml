# Publish a source directory from this repo into a target directory in a target repo

### SET UP
# 1 - Create a .github/secrets folder, if non-existent. Add .github/secrets to the .gitignore file
# 2 - Run the following command to create public and private keys for cross-repository communication, replacing `owner/repo` with the applicable information: ssh-keygen -t rsa -b 4096 -f .github/workflows/secrets/id_rsa -C "owner/repo" -N ""
# 3a - On GitHub.com, navigate to your source repository. Under the Settings tab, add the entire public key file (ending in .pub) as a Secret under the Actions panel with the name SSH_DEPLOY_KEY. If using a differing name, edit secrets.SSH_DEPLOY_KEY on line 56 below to match.
# 3b - On GitHub.com, navigate to your target repository. Under the Settings tab, add the entire private key file as a Deploy Key and allow write access
# 4 - Fill out the environment variables below to match your source and target destinations and build environment

name: Copy to target repo

on:
  workflow_dispatch:
  # push:
  #   branches: [main]

env:
  TARGET_REPO: the-dataface/yea-site
  TARGET_BRANCH: master
  TARGET_DIR: src/assets/cmsvelte/q22022
  SOURCE_DIR: build
  NODE_VERSION: lts/gallium
  BUILD_COMMAND: npm run build

jobs:
  build_and_copy:
    name: Build production files + copy to target repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          path: source

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: source/package-lock.json

      - name: Build production files
        run: |
          cd source
          npm ci
          ${{ env.BUILD_COMMAND }}
          cd ..

      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TARGET_REPO }}
          ref: ${{ env.TARGET_BRANCH }}
          ssh-key: ${{ secrets.PUSH_TO_YEA_SITE }}
          path: target

      - name: Copy build files to target directory
        run: |
          mkdir -p target/${{ env.TARGET_DIR }}
          cp source/${{ env.SOURCE_DIR }}/. target/${{ env.TARGET_DIR }}/ -a

      - name: Commit and push to target repository
        run: |
          cd target
          git config user.email "actions@users.noreply.github.com"
          git config user.name "Automated"
          git add .
          git commit -m "copied from ${{ github.repository }}"
          git push
